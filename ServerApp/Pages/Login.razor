@page "/login"

<h1>Login</h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" Class="form-control" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {
    public string ReturnUrl { get; set; }

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    protected override async Task OnInitializedAsync()
    {
        ShowErrors = false;
    }

    void HandleLogin()
    {
        ShowErrors = false;

        //var claims = new[]
        //{
        //        new Claim(ClaimTypes.Name, loginModel.Email)
        //    };

        //var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration["JwtSecurityKey"]));
        //var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);
        //var expiry = DateTime.Now.AddDays(Convert.ToInt32(_configuration["JwtExpiryInDays"]));

        //var token = new JwtSecurityToken(
        //    _configuration["JwtIssuer"],
        //    _configuration["JwtAudience"],
        //    claims,
        //    expires: expiry,
        //    signingCredentials: creds
        //);


    }
}
